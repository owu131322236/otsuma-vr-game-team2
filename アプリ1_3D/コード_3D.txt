<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>画像ターゲットクリックゲーム</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://aframe.io/releases/1.3.0/aframe.min.js"></script>
  <style>
    #start-btn {
      position: absolute;
      top: 20px;
      left: 20px;
      font-size: 20px;
      padding: 10px 20px;
      z-index: 10;
    }
  </style>
</head>
<body>

  <!-- スタートボタン -->
  <button id="start-btn">Start</button>

  <a-scene>
    <!-- 背景画像 -->
    <a-sky src="sora.jpg"></a-sky>

    

    <!-- カメラ＋カーソル -->
    <a-entity id="cameraRig" position="0 1.6 0">
      <a-entity camera look-controls></a-entity>
      <a-entity 
        cursor="rayOrigin: mouse"
        raycaster="objects: .clickable"
        position="0 0 -1"
        geometry="primitive: ring; radiusInner: 0.02; radiusOuter: 0.03"
        material="color: black; shader: flat">
      </a-entity>
    </a-entity>

    <!-- スコア＆タイマー -->
    <a-text id="scoreText" value="Score: 0" position="-1.5 2.8 -3" color="black" width="4"></a-text>
    <a-text id="timeText" value="Time: 30" position="1 2.8 -3" color="black" width="4"></a-text>
    <a-text id="resultText" value="" position="-1.2 2.4 -3" color="red" width="6"></a-text>

    <!-- ターゲット表示コンテナ -->
    <a-entity id="target-container"></a-entity>
  </a-scene>

  <script>
    let score = 0;
    let timeLeft = 30;
    let gameRunning = false;
    let spawnInterval, timerInterval;

    const scoreText = document.getElementById("scoreText");
    const timeText = document.getElementById("timeText");
    const resultText = document.getElementById("resultText");
    const container = document.getElementById("target-container");
    const startButton = document.getElementById("start-btn");

    const birds = [
      { src: "tori.png",     point: 1,  weight: 55, speed: 3 },
      { src: "karasu.png",   point: -3, weight: 30, speed: 4 },
      { src: "aoitori.png",  point: 3,  weight: 15, speed: 6 }
    ];

    function getRandomBird() {
      const totalWeight = birds.reduce((sum, b) => sum + b.weight, 0);
      let r = Math.random() * totalWeight;
      for (const bird of birds) {
        if (r < bird.weight) return bird;
        r -= bird.weight;
      }
      return birds[0]; // fallback
    }

    function spawnTarget() {
      if (!gameRunning) return;

      const bird = getRandomBird();
      const direction = Math.random() < 0.5 ? "left" : "right";
      const y = 1 + Math.random() * 2;
      const z = -3 - Math.random() * 4;
      const xStart = direction === "left" ? -6 : 6;
      const xEnd = direction === "left" ? 6 : -6;

      const image = document.createElement("a-image");
      image.setAttribute("src", bird.src);
      image.setAttribute("width", "1");
      image.setAttribute("height", "1");
      image.setAttribute("position", `${xStart} ${y} ${z}`);
      image.setAttribute("class", "clickable");

      const duration = 12000 / bird.speed;

      image.setAttribute("animation", {
        property: "position",
        to: `${xEnd} ${y} ${z}`,
        dur: duration,
        easing: "linear"
      });

      image.addEventListener("click", () => {
        if (!gameRunning) return;
        score += bird.point;
        scoreText.setAttribute("value", "Score: " + score);
        container.removeChild(image);
      });

      container.appendChild(image);

      setTimeout(() => {
        if (container.contains(image)) {
          container.removeChild(image);
        }
      }, duration);
    }

    function startGame() {
      score = 0;
      timeLeft = 30;
      gameRunning = true;
      resultText.setAttribute("value", "");
      scoreText.setAttribute("value", "Score: 0");
      timeText.setAttribute("value", "Time: 30");
      startButton.style.display = "none";

      spawnInterval = setInterval(spawnTarget, 600);
      timerInterval = setInterval(() => {
        timeLeft--;
        timeText.setAttribute("value", "Time: " + timeLeft);
        if (timeLeft <= 0) {
          endGame();
        }
      }, 1000);
    }

    function endGame() {
      gameRunning = false;
      clearInterval(spawnInterval);
      clearInterval(timerInterval);
      resultText.setAttribute("value", "Time Up! : Your Score : " + score);
      startButton.textContent = "Play again";
      startButton.style.display = "block";<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>画像ターゲットクリックゲーム</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://aframe.io/releases/1.3.0/aframe.min.js"></script>
  <style>
    #start-btn {
      position: absolute;
      top: 20px;
      left: 20px;
      font-size: 20px;
      padding: 10px 20px;
      z-index: 10;
    }
  </style>
</head>
<body>

  <!-- スタートボタン -->
  <button id="start-btn">Start</button>

  <a-scene>
    <!-- 背景画像 -->
    <a-sky src="sora.jpg"></a-sky>

    <!-- カメラ＋カーソル -->
    <a-entity id="cameraRig" position="0 1.6 0">
      <a-entity camera look-controls></a-entity>
      <a-entity 
        cursor="rayOrigin: mouse"
        raycaster="objects: .clickable"
        position="0 0 -1"
        geometry="primitive: ring; radiusInner: 0.02; radiusOuter: 0.03"
        material="color: black; shader: flat"
        visible="false">
      </a-entity>
    </a-entity>

    <!-- スコア＆タイマー -->
    <a-text id="scoreText" value="Score: 0" position="-1.5 2.8 -3" color="black" width="4"></a-text>
    <a-text id="timeText" value="Time: 30" position="1 2.8 -3" color="black" width="4"></a-text>
    <a-text id="resultText" value="" position="-1.2 2.4 -3" color="red" width="6"></a-text>

    <!-- ターゲット表示コンテナ -->
    <a-entity id="target-container"></a-entity>
  </a-scene>

  <script>
    let score = 0;
    let timeLeft = 30;
    let gameRunning = false;
    let spawnInterval, timerInterval;

    const scoreText = document.getElementById("scoreText");
    const timeText = document.getElementById("timeText");
    const resultText = document.getElementById("resultText");
    const container = document.getElementById("target-container");
    const startButton = document.getElementById("start-btn");

    const birds = [
      { src: "tori.png",     point: 1,  weight: 55, speed: 3 },
      { src: "karasu.png",   point: -3, weight: 30, speed: 4 },
      { src: "aoitori.png",  point: 3,  weight: 15, speed: 6 }
    ];

    function getRandomBird() {
      const totalWeight = birds.reduce((sum, b) => sum + b.weight, 0);
      let r = Math.random() * totalWeight;
      for (const bird of birds) {
        if (r < bird.weight) return bird;
        r -= bird.weight;
      }
      return birds[0]; // fallback
    }

    function spawnTarget() {
      if (!gameRunning) return;

      const bird = getRandomBird();
      const direction = Math.random() < 0.5 ? "left" : "right";
      const y = 1 + Math.random() * 2;
      const z = -3 - Math.random() * 4;
      const xStart = direction === "left" ? -6 : 6;
      const xEnd = direction === "left" ? 6 : -6;

      const image = document.createElement("a-image");
      image.setAttribute("src", bird.src);
      image.setAttribute("width", "1");
      image.setAttribute("height", "1");
      image.setAttribute("position", `${xStart} ${y} ${z}`);
      image.setAttribute("class", "clickable");

      const duration = 12000 / bird.speed;

      image.setAttribute("animation", {
        property: "position",
        to: `${xEnd} ${y} ${z}`,
        dur: duration,
        easing: "linear"
      });

      image.addEventListener("click", () => {
        if (!gameRunning) return;
        score += bird.point;
        scoreText.setAttribute("value", "Score: " + score);
        container.removeChild(image);
      });

      container.appendChild(image);

      setTimeout(() => {
        if (container.contains(image)) {
          container.removeChild(image);
        }
      }, duration);
    }

    function startGame() {
      score = 0;
      timeLeft = 30;
      gameRunning = true;
      resultText.setAttribute("value", "");
      scoreText.setAttribute("value", "Score: 0");
      timeText.setAttribute("value", "Time: 30");
      startButton.style.display = "none";

      spawnInterval = setInterval(spawnTarget, 600);
      timerInterval = setInterval(() => {
        timeLeft--;
        timeText.setAttribute("value", "Time: " + timeLeft);
        if (timeLeft <= 0) {
          endGame();
        }
      }, 1000);
    }

    function endGame() {
      gameRunning = false;
      clearInterval(spawnInterval);
      clearInterval(timerInterval);
      resultText.setAttribute("value", "Time Up! : Your Score : " + score);
      startButton.textContent = "Play again";
      startButton.style.display = "block";
    }

    startButton.addEventListener('click', startGame);
  </script>
</body>
</html>

    }

    startButton.addEventListener('click', startGame);
  </script>
</body>
</html>
